name: authentication-service pipeline

on:
  push:
    branches:
      - master
    paths:
      - 'authentication-service/**'
  pull_request:
    branches:
      - master
    paths:
      - 'authentication-service/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      auth-db:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: auth_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '16.17.1'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: docker build -t authentication-service:latest ./authentication-service

      - name: Run Docker Compose
        run: docker-compose up -d --build

      - name: Run tests
        run: docker-compose exec authentication-service npm test

      - name: Shutdown Docker Compose
        run: docker-compose down

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
